/*
 * EmoticoAddDialog.java
 *
 * Created on 27 ottobre 2008, 15.26
 */
package emoticon;

import emoticon.xml.EMOTIONXML;
import emoticon.xml.EmotionType;
import emoticon.xml.ObjectFactory;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 *
 * @author  Luigi
 */
public class EmoticonAddDialog extends javax.swing.JDialog {

    private Log log = LogFactory.getLog(this.getClass());
    private Emoticon emoticon;

    /** Creates new form EmoticoAddDialog */
    public EmoticonAddDialog(java.awt.Frame parent, boolean modal, Emoticon emoticon) {
        super(parent, modal);
        initComponents();
        this.emoticon = emoticon;
        nameText.setText(emoticon.getName());
        shortcutText.setText(emoticon.getShortcut());
        fileNameText.setText(emoticon.getShortcut() + ".gif");

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        shortcutText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        fileNameText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Nome");
        jLabel1.setName("jLabel1"); // NOI18N

        nameText.setName("nameText"); // NOI18N

        shortcutText.setName("shortcutText"); // NOI18N

        jLabel2.setText("Scorciatoia");
        jLabel2.setName("jLabel2"); // NOI18N

        fileNameText.setName("fileNameText"); // NOI18N

        jLabel3.setText("Nome del File");
        jLabel3.setName("jLabel3"); // NOI18N

        saveButton.setText("Salva");
        saveButton.setName("saveButton"); // NOI18N
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Annulla");
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(152, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(shortcutText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fileNameText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(108, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, saveButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(shortcutText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(saveButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
    // TODO add your handling code here:

    File destination = new File(Util.getInstance().getPath() + EmoticonsManger.EMOTICONSPATH + fileNameText.getText());
    if (shortcutText.getText().equals("")) {
        JOptionPane.showMessageDialog(this, "<html><font color=blue>La scorciatoia non può essere vuota<html>", "Attenzione", JOptionPane.WARNING_MESSAGE);
        return;
    }

    if (destination.isFile()) {
        log.debug("file destination : " + destination.getPath());
        JOptionPane.showMessageDialog(this, "<html><font color=blue>Il file scelto è già esistente<html>", "Attenzione", JOptionPane.WARNING_MESSAGE);
        return;
    }

    EmoticonsManger manger = new EmoticonsManger();
    EMOTIONXML emoticonsxml = manger.loadEmotionXML();

    EmotionType type = new ObjectFactory().createEmotionType();
    type.setImage(fileNameText.getText());
    type.setName(nameText.getText());
    type.setShortcut(shortcutText.getText());

    emoticonsxml.getEmotions().add(type);

    //scrivo i file

    manger.writeEmoticonXML(emoticonsxml);

    FileOutputStream fos;
    try {
        fos = new FileOutputStream(destination);
        fos.write(emoticon.getData());
        fos.close();
        log.debug("emoticon writed : " + fileNameText.getText());
    } catch (FileNotFoundException ex) {
        log.error(ex);
    } catch (IOException ex) {
        log.error(ex);
    }

    this.setVisible(false);
}//GEN-LAST:event_saveButtonActionPerformed

private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
}//GEN-LAST:event_cancelButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField fileNameText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField nameText;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField shortcutText;
    // End of variables declaration//GEN-END:variables
    // <editor-fold defaultstate="collapsed" desc=" Getter and Setter ">
    public Emoticon getEmoticon() {
        return emoticon;
    }

    public void setEmoticon(Emoticon emoticon) {
        this.emoticon = emoticon;
    }

    public JTextField getFileNameText() {
        return fileNameText;
    }

    public void setFileNameText(JTextField fileNameText) {
        this.fileNameText = fileNameText;
    }

    public JTextField getNameText() {
        return nameText;
    }

    public void setNameText(JTextField nameText) {
        this.nameText = nameText;
    }

    public JTextField getShortcutText() {
        return shortcutText;
    }

    public void setShortcutText(JTextField shortcutText) {
        this.shortcutText = shortcutText;
    }// </editor-fold>
}
