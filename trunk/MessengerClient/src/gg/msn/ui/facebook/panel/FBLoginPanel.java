/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FBLoginPanel.java
 *
 * Created on Aug 25, 2009, 11:37:42 PM
 */
package gg.msn.ui.facebook.panel;

import gg.msn.facebook.core.ErrorCode;
import gg.msn.facebook.core.FacebookUserList;
import gg.msn.facebook.core.FacebookManager;
import gg.msn.core.commons.Util;
import gg.msn.core.manager.PersistentDataManager;
import gg.msn.ui.ChatClientView;
import gg.msn.ui.facebook.thread.BuddyListRequester;
import gg.msn.ui.facebook.thread.MessageRequester;
import gg.msn.ui.theme.ThemeManager;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.util.Properties;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.jdesktop.application.Action;

/**
 *
 * @author Luigi
 */
public class FBLoginPanel extends javax.swing.JPanel {

    private static Log log = LogFactory.getLog(FBLoginPanel.class);
    /** Creates new form FBLoginPanel */
    private final ChatClientView ccv;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        emailLabel = new javax.swing.JLabel();
        psswLabel = new javax.swing.JLabel();
        emailText = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        connectionStatusLabel = new javax.swing.JLabel();
        passwText = new javax.swing.JPasswordField();
        buttonsToolBar = new javax.swing.JToolBar();
        ggLoginButton = new javax.swing.JButton();
        fbLoginButton = new javax.swing.JButton();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(gg.msn.ui.ChatClientApp.class).getContext().getResourceMap(FBLoginPanel.class);
        emailLabel.setText(resourceMap.getString("emailLabel.text")); // NOI18N
        emailLabel.setName("emailLabel"); // NOI18N

        psswLabel.setText(resourceMap.getString("psswLabel.text")); // NOI18N
        psswLabel.setName("psswLabel"); // NOI18N

        emailText.setText(resourceMap.getString("emailText.text")); // NOI18N
        emailText.setName("emailText"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(gg.msn.ui.ChatClientApp.class).getContext().getActionMap(FBLoginPanel.class, this);
        loginButton.setAction(actionMap.get("connect")); // NOI18N
        loginButton.setText(resourceMap.getString("loginButton.text")); // NOI18N
        loginButton.setName("loginButton"); // NOI18N

        connectionStatusLabel.setText(resourceMap.getString("connectionStatusLabel.text")); // NOI18N
        connectionStatusLabel.setName("connectionStatusLabel"); // NOI18N

        passwText.setText(resourceMap.getString("passwText.text")); // NOI18N
        passwText.setName("passwText"); // NOI18N

        buttonsToolBar.setBackground(resourceMap.getColor("buttonsToolBar.background")); // NOI18N
        buttonsToolBar.setBorder(null);
        buttonsToolBar.setRollover(true);
        buttonsToolBar.setName("buttonsToolBar"); // NOI18N
        buttonsToolBar.setOpaque(false);

        ggLoginButton.setAction(actionMap.get("showLogin")); // NOI18N
        ggLoginButton.setIcon(resourceMap.getIcon("ggLoginButton.icon")); // NOI18N
        ggLoginButton.setFocusable(false);
        ggLoginButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ggLoginButton.setName("ggLoginButton"); // NOI18N
        ggLoginButton.setOpaque(false);
        ggLoginButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonsToolBar.add(ggLoginButton);

        fbLoginButton.setAction(actionMap.get("showFacebookLogin")); // NOI18N
        fbLoginButton.setIcon(resourceMap.getIcon("fbLoginButton.icon")); // NOI18N
        fbLoginButton.setFocusable(false);
        fbLoginButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        fbLoginButton.setName("fbLoginButton"); // NOI18N
        fbLoginButton.setOpaque(false);
        fbLoginButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonsToolBar.add(fbLoginButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(buttonsToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(connectionStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(psswLabel)
                    .addComponent(emailLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(passwText, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(buttonsToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(127, 127, 127)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel)
                    .addComponent(emailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(psswLabel)
                    .addComponent(passwText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(connectionStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(93, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar buttonsToolBar;
    private javax.swing.JLabel connectionStatusLabel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailText;
    private javax.swing.JButton fbLoginButton;
    private javax.swing.JButton ggLoginButton;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passwText;
    private javax.swing.JLabel psswLabel;
    // End of variables declaration//GEN-END:variables

    public FBLoginPanel(ChatClientView ccv) {
        super();
        initComponents();
        this.ccv = ccv;
        buttonsToolBar.setVisible(false);

        //add nickText ENTER keystroke
//        emailText.getInputMap().put(KeyStroke.getKeyStroke("ENTER"), "Enter");
//        emailText.getActionMap().put("Enter", getActionMap().get("connect"));
        KeyStroke enter = KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true);
        emailText.getInputMap().put(enter, "Enter");
        emailText.getActionMap().put("Enter", getActionMap().get("connect"));
        passwText.getInputMap().put(KeyStroke.getKeyStroke("ENTER"), "Enter");
        passwText.getActionMap().put("Enter", getActionMap().get("connect"));

        //carico i valori salvati se ci sono
        String email = Util.readProperties().getProperty(Util.PROPERTY_FACEBOOK_EMAIL);
        if (email != null && !email.equals("")) {
            emailText.setText(email);
        }
        String psw = Util.readProperties().getProperty(Util.PROPERTY_FACEBOOK_PSW);
        if (psw != null && !psw.equals("")) {
            passwText.setText(psw);
        }

    }

    private void connectStart() {
        String email = emailText.getText().trim();
        String pass = passwText.getText().trim();

        //salvo i valori inserioti su email e password
        Properties prop = Util.readProperties();
        prop.setProperty(Util.PROPERTY_FACEBOOK_EMAIL, email);
        prop.setProperty(Util.PROPERTY_FACEBOOK_PSW, pass);
        Util.writeProperties(prop);

        /*String email = "username@email.com.cn";
        String pass = "password";*/

        log.debug(email + ":" + pass);
        final FacebookManager fbManger = new FacebookManager(email, pass);

        int loginErrorCode = fbManger.doLogin();
        if (loginErrorCode == ErrorCode.Error_Global_NoError) {
            if (fbManger.doParseHomePage() == ErrorCode.Error_Global_NoError) {
                int seqNumber = fbManger.findChannel();
                if (seqNumber < 0) {
                    ccv.getHelper().showErrorDialog("Impossibile connettersi, provare più tardi!");
                    return;
                }
                PersistentDataManager.setUid(FacebookManager.uid);
                FacebookManager.getBuddyList();
                ChatClientView.protocol = ChatClientView.FACEBOOK_PROTOCOL;
                PersistentDataManager.setNick(FacebookUserList.me.name);

                //keep requesting message from the server
                new Thread(new MessageRequester(ccv, fbManger, email, pass)).start();

                //requests buddy list every 90 seconds
                new Thread(new BuddyListRequester(ccv)).start();

                //TODO post
                //Init GUI
                log.debug("Init GUI...");

                ccv.getMainPanel().getNickLabel().setText(FacebookUserList.me.name);
                ccv.getMainPanel().insertIcons();
                ccv.getHelper().showMainPanel();
                ccv.getMenuBar().setVisible(false);
                if (ccv.getTray() != null) {
                    ccv.getTray().setToolTip("Facebook - connesso : " + PersistentDataManager.getNick());
                }
                log.debug("showed main panel");
                //必须在getbuddylist之后
//                fbc = new Cheyenne();
//                fbc.setVisible(true);
            } else {
                ccv.getHelper().showWarnDialog("Non è stato possibile effettuare il login.<br>" +
                        "Ricontrolla email e password!");
                connectionStatusLabel.setVisible(false);
                loginButton.setVisible(true);
            }
        } else if (loginErrorCode == ErrorCode.kError_Async_NotLoggedIn) {
            //TODO handle the error derived from this login
            JOptionPane.showMessageDialog(
                    ccv.getFrame(), "Not logged in, please check your input!",
                    "Not Logged In",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(
                    ccv.getFrame(), "Not logged in, please check your internet connection!",
                    "Not Logged In",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    @Action
    public void connect() {
        loginButton.setVisible(false);
        connectionStatusLabel.setText("Connessione...");
        connectionStatusLabel.validate();

        new Thread(new Runnable() {

            public void run() {
                connectStart();
            }
        }).start();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        super.paintComponent(g2d);
        try {
            g2d.setRenderingHints(new RenderingHints(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR));
//            log.debug("theme : " + ((ChatClientView) ChatClientApp.getApplication().getMainView()).getHelper().getTheme());
            ImageIcon icon = ThemeManager.getTheme().get(ThemeManager.LOGIN_BACKGROUND);

            if (icon != null) {
                Image image = icon.getImage();
                g2d.drawImage(image, 0, 0, getWidth(), getHeight(), this);
            } else {
                log.warn("image " + icon.getDescription() + " not Found");
            }

        } catch (Exception e) {
//            log.debug(e);
        }
    }

    @Action
    public void showFacebookLogin() {
        ccv.getHelper().showFacebookLoginPanel();
    }

    @Action
    public void showLogin() {
        ccv.getHelper().showLoginPanel();
    }

    public static void main(String[] args) {
//        FacebookManager facebookManager = new FacebookManager();
//        facebookManager.doLogin("luigi.ant@email.it", "03021984");
//        System.out.println(FacebookManager.facebookGetMethod("http://0.channel35.facebook.com/x/0/false/p_1567835536=-1"));
//        System.out.println(FacebookManager.facebookGetMethod("http://www.google.com"));
    }
}
