/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LoginPanel.java
 *
 * Created on Sep 1, 2009, 2:21:23 PM
 */
package gg.msn.ui.panel;

import gg.msn.ui.ChatClientView;
import gg.msn.ui.theme.ThemeManager;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.jdesktop.application.Action;


/**
 *
 * @author Luigi
 */
public class LoginPanel extends javax.swing.JPanel {

    private ChatClientView ccv;
    private static Log log = LogFactory.getLog(LoginPanel.class);

    /** Creates new form LoginPanel */
    public LoginPanel(ChatClientView ccv) {
        super();
        this.ccv = ccv;
        initComponents();

         //imposto il cursore nel inputText
        nickText.selectAll();

        //carico l'icona dell'utente
        userLabel.setIcon(ThemeManager.getTheme().get(ThemeManager.USER_ICON));
    
         //add nickText ENTER keystroke
        nickText.getInputMap().put(KeyStroke.getKeyStroke("ENTER"), "Enter");
        nickText.getActionMap().put("Enter", getActionMap().get("connetti"));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nickText = new javax.swing.JTextField();
        jToolBar2 = new javax.swing.JToolBar();
        login = new javax.swing.JButton();
        userLabel = new javax.swing.JLabel();
        buttonsToolBar = new javax.swing.JToolBar();
        ggLoginButton = new javax.swing.JButton();
        fbLoginButton = new javax.swing.JButton();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(gg.msn.ui.ChatClientApp.class).getContext().getResourceMap(LoginPanel.class);
        nickText.setText(resourceMap.getString("nickText.text")); // NOI18N
        nickText.setName("nickText"); // NOI18N

        jToolBar2.setFloatable(false);
        jToolBar2.setAutoscrolls(true);
        jToolBar2.setBorderPainted(false);
        jToolBar2.setName("jToolBar2"); // NOI18N
        jToolBar2.setOpaque(false);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(gg.msn.ui.ChatClientApp.class).getContext().getActionMap(LoginPanel.class, this);
        login.setAction(actionMap.get("connetti")); // NOI18N
        login.setIcon(resourceMap.getIcon("login.icon")); // NOI18N
        login.setFocusable(false);
        login.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        login.setName("login"); // NOI18N
        login.setOpaque(false);
        login.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(login);

        userLabel.setIcon(resourceMap.getIcon("userLabel.icon")); // NOI18N
        userLabel.setName("userLabel"); // NOI18N

        buttonsToolBar.setBorder(null);
        buttonsToolBar.setRollover(true);
        buttonsToolBar.setName("buttonsToolBar"); // NOI18N
        buttonsToolBar.setOpaque(false);

        ggLoginButton.setAction(actionMap.get("showLogin")); // NOI18N
        ggLoginButton.setIcon(resourceMap.getIcon("ggLoginButton.icon")); // NOI18N
        ggLoginButton.setFocusable(false);
        ggLoginButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ggLoginButton.setName("ggLoginButton"); // NOI18N
        ggLoginButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonsToolBar.add(ggLoginButton);

        fbLoginButton.setAction(actionMap.get("showFacebookLogin")); // NOI18N
        fbLoginButton.setIcon(resourceMap.getIcon("fbLoginButton.icon")); // NOI18N
        fbLoginButton.setFocusable(false);
        fbLoginButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        fbLoginButton.setName("fbLoginButton"); // NOI18N
        fbLoginButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonsToolBar.add(fbLoginButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(userLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(nickText, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(123, Short.MAX_VALUE))
            .addComponent(buttonsToolBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(buttonsToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109)
                .addComponent(userLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nickText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar buttonsToolBar;
    private javax.swing.JButton fbLoginButton;
    private javax.swing.JButton ggLoginButton;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JButton login;
    private javax.swing.JTextField nickText;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables

    /**
     * Connette al server principale 
     */
    @Action
    public void connetti() {
        if (!nickText.getText().equals("")) {
            ccv.getHelper().connect();
        } else {
            JOptionPane.showMessageDialog(ccv.getFrame(), "<html><font color=red>Il nick non pu√≤ essere vuoto<html>", "Errore", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }

    @Action
    public void showFacebookLogin() {
        ccv.getHelper().showFacebookLoginPanel();
    }
    @Action
    public void showLogin() {
        ccv.getHelper().showLoginPanel();
    }


    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        super.paintComponent(g2d);
        try {
            g2d.setRenderingHints(new RenderingHints(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR));
//            log.debug("theme : " + ((ChatClientView) ChatClientApp.getApplication().getMainView()).getHelper().getTheme());
            ImageIcon icon = ThemeManager.getTheme().get(ThemeManager.LOGIN_BACKGROUND);

            if (icon != null) {
                Image image = icon.getImage();
                g2d.drawImage(image, 0, 0, getWidth(), getHeight(), this);
            } else {
                log.warn("image " + icon.getDescription() + " not Found");
            }

        } catch (Exception e) {
//            log.debug(e);
        }
    }
// <editor-fold defaultstate="collapsed" desc="Get & Set">
    public JTextField getNickText() {
        return nickText;
    }

    public void setNickText(JTextField nickText) {
        this.nickText = nickText;
    }

    public JLabel getUserLabel() {
        return userLabel;
    }

    public void setUserLabel(JLabel userLabel) {
        this.userLabel = userLabel;
    }

    public JButton getLogin() {
        return login;
    }

    public void setLogin(JButton login) {
        this.login = login;
    }

    public ChatClientView getCcv() {
        return ccv;
    }
    
    
    // </editor-fold>

    
}
